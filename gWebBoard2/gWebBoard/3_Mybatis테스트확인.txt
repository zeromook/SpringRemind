
1. pom.xml에 라이브러리 추가

	[참고] spring-jdbc와 spring-tx 라이브러리도 추가하지 않으면 에러가 발생할 수도
	
		<!-- 마이바티스 추가  -->
		<!-- mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		
		<!-- mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
	  	<!--  SPRING JDBC 필요 --> 
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>	
		
		<!-- 트랜잭션 필요 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-tx</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		

2. 	root-context.xml에 DB 연결 및 SqlSession 설정

		<?xml version="1.0" encoding="UTF-8"?>
		<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:context="http://www.springframework.org/schema/context"
			xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
			xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
			
		<!-- Root Context: defines shared resources visible to all other web components -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
			<property name="url" value="jdbc:mariadb://localhost:3306/test"></property>
			<property name="username" value="root"></property>
			<property name="password" value="admin1234"></property>
		</bean>
			
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		 	<property name="dataSource" ref="dataSource" />
		  <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		  <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
		 </bean>
		 
		 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		   <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		 </bean>
		 
		 <context:component-scan base-package="org.javassem"></context:component-scan>
		    		
		</beans>


3.  mybatis-config.xml 내용없이 설정

3.  TestMapper.xml
		<?xml version="1.0" encoding="UTF-8"?>
		<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		<mapper namespace="org.javassem.TestMapper">
		
			<select id="getTime" resultType="string">
				select sysdate from dual
			</select>
		</mapper>
		
4. src/test/java MyBatisTest.java 실행 > Run As > Junit Test
		@RunWith(SpringJUnit4ClassRunner.class)
		@ContextConfiguration("file:src/main/webapp/WEB-INF/spring/root-context.xml")
		public class MybatisTest {
		
			@Autowired
			private DataSource dataSource;
			
			@Autowired
			private SqlSessionFactory sqlSessionFactory;
			
			@Test
			public void timeTest() {
				try {
				
					SqlSession session = sqlSessionFactory.openSession();
					
					System.out.println("[결과]"+session.selectOne("org.javassem.TestMapper.getTime"));
				} catch (Exception e) {
					e.printStackTrace();
				}		
			}
		}

5. 실제 board 테이블과 연결하여 확인
	(1) com.javassem.domain.BoardVO.java
	(2) BoardMapper.xml 에 추가
	(3) src/test/java - MybatisTest.java 에 추가


[참고] assert 
		assertEqulas()
		assertTrue()
		assertFalse()
		assertNull()
		assertNotNull()
		assertArrayEquals()


	